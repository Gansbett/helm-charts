{{- range $clusterName, $cluster := .Values.clusters }}
{{- if $cluster.enabled }}
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ $clusterName }}
  labels:
    {{- include "cnpg-databases.labels" $ | nindent 4 }}
    cnpg.io/cluster: {{ $clusterName }}
spec:
  instances: {{ $cluster.instances | default 3 }}

  {{- if $cluster.imageCatalogRef }}
  imageCatalogRef:
    {{- toYaml $cluster.imageCatalogRef | nindent 4 }}
  {{- else }}
  imageName: {{ $cluster.imageName | default "ghcr.io/cloudnative-pg/postgresql:17.2" }}
  {{- end }}

  {{- if $cluster.databases }}
  managed:
    roles:
    {{- $uniqueOwners := dict }}
    {{- range $database := $cluster.databases }}
    {{- $_ := set $uniqueOwners $database.owner true }}
    {{- end }}
    {{- range $owner, $_ := $uniqueOwners }}
    - name: {{ $owner | quote }}
      ensure: present
      login: true
      passwordSecret:
        name: {{ $clusterName }}-{{ include "cnpg-database-manager.sanitizeName" $owner }}-password
    {{- end }}
  {{- end }}

  postgresql:
    parameters:
      max_connections: {{ $cluster.maxConnections | default "200" | quote }}
      shared_buffers: {{ $cluster.sharedBuffers | default "256MB" | quote }}
      effective_cache_size: {{ $cluster.effectiveCacheSize | default "1GB" | quote }}
      maintenance_work_mem: {{ $cluster.maintenanceWorkMem | default "64MB" | quote }}
      checkpoint_completion_target: {{ $cluster.checkpointCompletionTarget | default "0.9" | quote }}
      wal_buffers: {{ $cluster.walBuffers | default "16MB" | quote }}
      default_statistics_target: {{ $cluster.defaultStatisticsTarget | default "100" | quote }}
      random_page_cost: {{ $cluster.randomPageCost | default "1.1" | quote }}
      effective_io_concurrency: {{ $cluster.effectiveIoConcurrency | default "200" | quote }}
      work_mem: {{ $cluster.workMem | default "4MB" | quote }}
      min_wal_size: {{ $cluster.minWalSize | default "1GB" | quote }}
      max_wal_size: {{ $cluster.maxWalSize | default "4GB" | quote }}
      {{- with $cluster.parameters }}
      {{- range $key, $value := . }}
      {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}

  storage:
    size: {{ $cluster.storage.size | default "50Gi" }}
    {{- if $cluster.storage.storageClass }}
    storageClass: {{ $cluster.storage.storageClass }}
    {{- end }}

  {{- if $cluster.monitoring }}
  {{- if $cluster.monitoring.enabled }}
  monitoring:
    enablePodMonitor: true
  {{- end }}
  {{- end }}

  {{- if $cluster.backup }}
  {{- if $cluster.backup.enabled }}
  backup:
    retentionPolicy: {{ $cluster.backup.retentionPolicy | default "30d" }}
    {{- if $cluster.backup.volumeSnapshot }}
    volumeSnapshot:
      {{- if $cluster.backup.volumeSnapshot.className }}
      className: {{ $cluster.backup.volumeSnapshot.className }}
      {{- end }}
      {{- if hasKey $cluster.backup.volumeSnapshot "online" }}
      online: {{ $cluster.backup.volumeSnapshot.online }}
      {{- end }}
      {{- if $cluster.backup.volumeSnapshot.onlineConfiguration }}
      onlineConfiguration:
        {{- if hasKey $cluster.backup.volumeSnapshot.onlineConfiguration "immediateCheckpoint" }}
        immediateCheckpoint: {{ $cluster.backup.volumeSnapshot.onlineConfiguration.immediateCheckpoint }}
        {{- end }}
        {{- if hasKey $cluster.backup.volumeSnapshot.onlineConfiguration "waitForArchive" }}
        waitForArchive: {{ $cluster.backup.volumeSnapshot.onlineConfiguration.waitForArchive }}
        {{- end }}
      {{- end }}
      {{- if $cluster.backup.volumeSnapshot.snapshotOwnerReference }}
      snapshotOwnerReference: {{ $cluster.backup.volumeSnapshot.snapshotOwnerReference }}
      {{- end }}
    {{- end }}
    {{- if or $cluster.backup.s3 $cluster.backup.azure $cluster.backup.gcs $cluster.backup.destinationPath }}
    barmanObjectStore:
      {{- if $cluster.backup.destinationPath }}
      destinationPath: {{ $cluster.backup.destinationPath }}
      {{- else if $cluster.backup.s3 }}
      destinationPath: s3://{{ $cluster.backup.s3.bucket }}/{{ $cluster.backup.s3.path | default $clusterName }}
      {{- else if $cluster.backup.azure }}
      destinationPath: {{ $cluster.backup.azure.destinationPath }}
      {{- else if $cluster.backup.gcs }}
      destinationPath: gs://{{ $cluster.backup.gcs.bucket }}/{{ $cluster.backup.gcs.path | default $clusterName }}
      {{- end }}

      {{- if $cluster.backup.s3 }}
      {{- if $cluster.backup.s3.endpoint }}
      endpointURL: {{ $cluster.backup.s3.endpoint }}
      {{- end }}
      s3Credentials:
        {{- if $cluster.backup.s3.region }}
        region:
          name: {{ $clusterName }}-backup-creds
          key: AWS_DEFAULT_REGION
        {{- end }}
        accessKeyId:
          name: {{ $clusterName }}-backup-creds
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: {{ $clusterName }}-backup-creds
          key: AWS_SECRET_ACCESS_KEY
      {{- end }}

      {{- if $cluster.backup.azure }}
      {{- if $cluster.backup.azure.endpointURL }}
      endpointURL: {{ $cluster.backup.azure.endpointURL }}
      {{- end }}
      azureCredentials:
        {{- if $cluster.backup.azure.inheritFromAzureAD }}
        inheritFromAzureAD: {{ $cluster.backup.azure.inheritFromAzureAD }}
        {{- else }}
        {{- if $cluster.backup.azure.connectionString }}
        connectionString:
          name: {{ $clusterName }}-backup-creds
          key: AZURE_CONNECTION_STRING
        {{- else if $cluster.backup.azure.storageAccount }}
        storageAccount:
          name: {{ $clusterName }}-backup-creds
          key: AZURE_STORAGE_ACCOUNT
        {{- if $cluster.backup.azure.storageKey }}
        storageKey:
          name: {{ $clusterName }}-backup-creds
          key: AZURE_STORAGE_KEY
        {{- else if $cluster.backup.azure.storageSasToken }}
        storageSasToken:
          name: {{ $clusterName }}-backup-creds
          key: AZURE_STORAGE_SAS_TOKEN
        {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}

      {{- if $cluster.backup.gcs }}
      googleCredentials:
        {{- if $cluster.backup.gcs.gkeEnvironment }}
        gkeEnvironment: {{ $cluster.backup.gcs.gkeEnvironment }}
        {{- else if $cluster.backup.gcs.applicationCredentials }}
        applicationCredentials:
          name: {{ $clusterName }}-backup-creds
          key: GOOGLE_APPLICATION_CREDENTIALS
        {{- end }}
      {{- end }}
    {{- end }}

  {{- if $cluster.backup.schedule }}
  scheduledBackup:
    - name: daily-backup
      schedule: {{ $cluster.backup.schedule | quote }}
      backupOwnerReference: self
      {{- if $cluster.backup.method }}
      method: {{ $cluster.backup.method }}
      {{- end }}
      {{- if $cluster.backup.online }}
      online: {{ $cluster.backup.online }}
      {{- end }}
      {{- if $cluster.backup.onlineConfiguration }}
      onlineConfiguration:
        {{- toYaml $cluster.backup.onlineConfiguration | nindent 8 }}
      {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}

  {{- if and $cluster.recovery $cluster.recovery.enabled }}
  bootstrap:
    recovery:
      {{- if $cluster.recovery.backup }}
      {{- if $cluster.recovery.backup.name }}
      backup:
        name: {{ $cluster.recovery.backup.name }}
      {{- end }}
      {{- end }}

      {{- if $cluster.recovery.source }}
      source: {{ $cluster.recovery.source }}
      {{- end }}

      {{- if $cluster.recovery.recoveryTarget }}
      recoveryTarget:
        {{- if $cluster.recovery.recoveryTarget.targetTime }}
        targetTime: {{ $cluster.recovery.recoveryTarget.targetTime | quote }}
        {{- end }}
        {{- if hasKey $cluster.recovery.recoveryTarget "exclusive" }}
        exclusive: {{ $cluster.recovery.recoveryTarget.exclusive }}
        {{- end }}
        {{- if $cluster.recovery.recoveryTarget.targetXID }}
        targetXID: {{ $cluster.recovery.recoveryTarget.targetXID | quote }}
        {{- end }}
        {{- if $cluster.recovery.recoveryTarget.targetName }}
        targetName: {{ $cluster.recovery.recoveryTarget.targetName | quote }}
        {{- end }}
        {{- if $cluster.recovery.recoveryTarget.targetLSN }}
        targetLSN: {{ $cluster.recovery.recoveryTarget.targetLSN | quote }}
        {{- end }}
        {{- if $cluster.recovery.recoveryTarget.targetImmediate }}
        targetImmediate: {{ $cluster.recovery.recoveryTarget.targetImmediate }}
        {{- end }}
        {{- if $cluster.recovery.recoveryTarget.backupID }}
        backupID: {{ $cluster.recovery.recoveryTarget.backupID | quote }}
        {{- end }}
      {{- end }}

      {{- if $cluster.recovery.database }}
      database: {{ $cluster.recovery.database }}
      {{- end }}
      {{- if $cluster.recovery.owner }}
      owner: {{ $cluster.recovery.owner }}
      {{- end }}
      {{- if $cluster.recovery.secret }}
      secret:
        {{- toYaml $cluster.recovery.secret | nindent 8 }}
      {{- end }}
  {{- else }}
  bootstrap:
    initdb:
      database: postgres
      owner: postgres
      {{- if $cluster.initdb }}
      {{- if $cluster.initdb.postInitSQL }}
      postInitSQL:
        {{- range $cluster.initdb.postInitSQL }}
        - {{ . }}
        {{- end }}
      {{- end }}
      {{- end }}
  {{- end }}

  {{- if $cluster.resources }}
  resources:
    {{- toYaml $cluster.resources | nindent 4 }}
  {{- end }}

  {{- if $cluster.externalClusters }}
  externalClusters:
    {{- toYaml $cluster.externalClusters | nindent 4 }}
  {{- end }}

  {{- if $cluster.additionalClusterSpec }}
  {{- toYaml $cluster.additionalClusterSpec | nindent 2 }}
  {{- end }}

{{- end }}
{{- end }}
