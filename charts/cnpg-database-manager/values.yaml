# CloudNativePG Database Clusters Configuration
# This chart manages PostgreSQL clusters, databases, and users using CloudNativePG operator

# -- Image catalog configurations. Defines reusable container image references.
# @default -- `{}` (no catalogs deployed by default)
imageCatalogs: {}
  # Example image catalog:
  # postgresql:
  #   # -- Enable or disable this catalog
  #   enabled: true
  #   # -- Catalog kind: ImageCatalog (namespaced) or ClusterImageCatalog (cluster-scoped)
  #   kind: ImageCatalog
  #   # -- Custom labels
  #   labels: {}
  #   # -- Custom annotations
  #   annotations: {}
  #   # -- List of PostgreSQL images by major version
  #   images:
  #     - major: 15
  #       image: ghcr.io/cloudnative-pg/postgresql:15.6
  #     - major: 16
  #       image: ghcr.io/cloudnative-pg/postgresql:16.2
  #     - major: 17
  #       image: ghcr.io/cloudnative-pg/postgresql:17.2

# -- PostgreSQL cluster configurations. Each key represents a cluster name.
# @default -- `{}` (no clusters deployed by default)
clusters: {}
  # Example cluster configuration:
  # main:
  #   # -- Enable or disable this cluster
  #   enabled: true
  #   
  #   # -- Number of PostgreSQL instances in the cluster (replicas)
  #   instances: 3
  #   
  #   # -- PostgreSQL container image (direct reference)
  #   imageName: ghcr.io/cloudnative-pg/postgresql:17.2
  #
  #   # -- OR: Use ImageCatalog reference instead of imageName
  #   imageCatalogRef:
  #     apiGroup: postgresql.cnpg.io
  #     kind: ImageCatalog
  #     name: postgresql
  #     major: 17
  #   
  #   # -- Storage configuration
  #   storage:
  #     # -- Size of the persistent volume
  #     size: 50Gi
  #     # -- Storage class name (optional)
  #     storageClass: ""
  #     # -- PVC template for advanced customization (optional)
  #     pvcTemplate: {}
  #       # accessModes:
  #       #   - ReadWriteOnce
  #       # resources:
  #       #   requests:
  #       #     storage: 50Gi
  #       # storageClassName: premium-ssd
  #       # volumeMode: Filesystem
  #
  #   # -- WAL storage configuration (optional, for performance optimization)
  #   walStorage:
  #     # -- Enable separate WAL storage
  #     enabled: false
  #     # -- Size of the WAL persistent volume
  #     size: 10Gi
  #     # -- Storage class name for WAL volume (optional)
  #     storageClass: ""
  #     # -- PVC template for WAL volume advanced customization (optional)
  #     pvcTemplate: {}
  #       # accessModes:
  #       #   - ReadWriteOnce
  #       # resources:
  #       #   requests:
  #       #     storage: 10Gi
  #       # storageClassName: fast-nvme
  #       # volumeMode: Filesystem
  #
  #   # -- Resource limits and requests
  #   resources:
  #     requests:
  #       memory: "2Gi"
  #       cpu: "1000m"
  #     limits:
  #       memory: "4Gi"
  #       cpu: "2000m"
  #   
  #   # -- PostgreSQL tuning parameters (overrides defaults)
  #   maxConnections: "200"
  #   sharedBuffers: "256MB"
  #   effectiveCacheSize: "1GB"
  #   maintenanceWorkMem: "64MB"
  #   checkpointCompletionTarget: "0.9"
  #   walBuffers: "16MB"
  #   defaultStatisticsTarget: "100"
  #   randomPageCost: "1.1"
  #   effectiveIoConcurrency: "200"
  #   workMem: "4MB"
  #   minWalSize: "1GB"
  #   maxWalSize: "4GB"
  #   
  #   # -- Additional custom PostgreSQL parameters
  #   parameters:
  #     log_statement: "all"
  #     log_min_duration_statement: "1000"
  #   
  #   # -- Monitoring configuration
  #   monitoring:
  #     # -- Enable Prometheus monitoring
  #     enabled: true
  #     # -- Prometheus alert rules
  #     prometheusRule:
  #       # -- Enable PrometheusRule resource
  #       enabled: true
  #       # -- Custom labels for PrometheusRule
  #       labels: {}
  #       # -- Custom annotations for PrometheusRule
  #       annotations: {}
  #       # -- Evaluation interval
  #       interval: ""
  #       # -- Custom alert rules (overrides defaults if specified)
  #       rules: []
  #         # - alert: CustomAlert
  #         #   annotations:
  #         #     summary: "Custom alert"
  #         #   expr: |
  #         #     metric > threshold
  #         #   for: 5m
  #         #   labels:
  #         #     severity: warning
  #   
  #   # -- Backup configuration
  #   backup:
  #     # -- Enable automated backups
  #     enabled: false
  #     # -- Backup schedule (cron format)
  #     schedule: "0 0 0 * * *"
  #     # -- Backup retention policy
  #     retentionPolicy: "30d"
  #
  #     # -- Direct destinationPath (overrides provider-specific paths)
  #     destinationPath: ""
  #
  #     # -- Backup method: barmanObjectStore (default) or volumeSnapshot
  #     method: ""
  #
  #     # -- Volume snapshot configuration (for CSI-compatible storage)
  #     volumeSnapshot:
  #       # -- VolumeSnapshot class name (required for volumeSnapshot method)
  #       className: ""
  #       # -- Online backup (true, default) or offline backup (false)
  #       online: true
  #       # -- Online backup configuration
  #       onlineConfiguration:
  #         # -- Force immediate checkpoint before snapshot
  #         immediateCheckpoint: false
  #         # -- Wait for WAL archiving before completing backup
  #         waitForArchive: true
  #       # -- Snapshot ownership: none (default), backup, cluster
  #       snapshotOwnerReference: ""
  #
  #     # -- S3 configuration for backups
  #     s3:
  #       # -- S3 bucket name (required when S3 enabled)
  #       bucket: cnpg-backups
  #       # -- Path prefix in bucket (default: cluster name)
  #       path: ""
  #       # -- S3 endpoint URL (optional, defaults to AWS)
  #       endpoint: ""
  #       # -- S3 region (optional)
  #       region: us-east-1
  #       # -- S3 access key ID (required when S3 enabled)
  #       accessKeyId: ""
  #       # -- S3 secret access key (required when S3 enabled)
  #       secretAccessKey: ""
  #       # -- Existing secret with S3 credentials (alternative to accessKeyId/secretAccessKey)
  #       credentials:
  #         existingSecret: ""
  #
  #     # -- Azure Blob Storage configuration for backups
  #     azure:
  #       # -- Azure Blob Storage destination path (e.g., https://account.blob.core.windows.net/container/path)
  #       destinationPath: ""
  #       # -- Azure endpoint URL (optional, for compatible providers)
  #       endpointURL: ""
  #       # -- Use Azure AD Workload Identity (recommended)
  #       inheritFromAzureAD: false
  #       # -- Azure connection string (alternative to account+key)
  #       connectionString: ""
  #       # -- Azure storage account name
  #       storageAccount: ""
  #       # -- Azure storage account key
  #       storageKey: ""
  #       # -- Azure SAS token (alternative to storage key)
  #       storageSasToken: ""
  #
  #     # -- Google Cloud Storage configuration for backups
  #     gcs:
  #       # -- GCS bucket name (required when GCS enabled)
  #       bucket: cnpg-backups
  #       # -- Path prefix in bucket (default: cluster name)
  #       path: ""
  #       # -- Use GKE Workload Identity (recommended)
  #       gkeEnvironment: false
  #       # -- Application credentials JSON (alternative to Workload Identity)
  #       applicationCredentials: ""
  #   
  #   # -- Custom initdb SQL statements
  #   initdb:
  #     postInitSQL:
  #       - "CREATE EXTENSION IF NOT EXISTS pg_stat_statements;"
  #   
  #   # -- Database and user definitions
  #   databases:
  #     - # -- Database name
  #       name: keycloak
  #       # -- Database owner/user name
  #       owner: keycloak_user
  #       # -- Optional: Target namespace for secret replication
  #       targetNamespace: ""
  #       # -- Optional: Use existing secret for credentials
  #       existingSecret: ""
  #       # -- Optional: Database encoding (default: UTF8)
  #       encoding: "UTF8"
  #       # -- Optional: Database locale (default: C)
  #       locale: "C"
  #       # -- Optional: PostgreSQL extensions to install in this database
  #       extensions: []
  #         # - # -- Extension name (e.g., vector, postgis, timescaledb)
  #         #   name: vector
  #         #   # -- Extension version (optional, uses default if not specified)
  #         #   version: "0.7.0"
  #         #   # -- Schema where extension should be installed (optional, uses current default)
  #         #   schema: public
  #     - name: paperless
  #       owner: paperless_user
  #       targetNamespace: paperless
  #
  #   # -- Connection pooling configuration (PgBouncer)
  #   poolers: []
  #     # - # -- Pooler name
  #       name: rw
  #       # -- Pooler type: rw (read-write), ro (read-only), r (read-any)
  #       type: rw
  #       # -- Number of pooler instances
  #       instances: 3
  #       # -- Pool mode: session or transaction
  #       poolMode: transaction
  #       # -- PgBouncer parameters
  #       parameters:
  #         max_client_conn: "1000"
  #         default_pool_size: "25"
  #         min_pool_size: "5"
  #         reserve_pool_size: "5"
  #       # -- Monitoring configuration
  #       monitoring:
  #         enablePodMonitor: true
  #       # -- Pod template for resources and affinity
  #       template:
  #         spec:
  #           containers:
  #           - name: pgbouncer
  #             resources:
  #               requests:
  #                 cpu: "500m"
  #                 memory: "512Mi"
  #               limits:
  #                 cpu: "1"
  #                 memory: "1Gi"
  #     # - name: ro
  #       type: ro
  #       instances: 5
  #       poolMode: transaction
  #       parameters:
  #         max_client_conn: "2000"
  #         default_pool_size: "50"
  #       # -- Additional CloudNativePG Pooler spec fields (for advanced use cases)
  #       additionalPoolerSpec: {}
  #         # Example: Custom service type
  #         # serviceTemplate:
  #         #   spec:
  #         #     type: LoadBalancer
  #
  #   # -- Recovery configuration for disaster recovery
  #   recovery:
  #     # -- Enable recovery mode (bootstrap from backup/object store)
  #     enabled: false
  #     # -- Recovery source (external cluster name for object store recovery)
  #     source: ""
  #     # -- Backup reference for recovery
  #     backup:
  #       name: ""  # Backup CRD name
  #     # -- Point-in-Time Recovery target
  #     recoveryTarget:
  #       # -- Target time for PITR (RFC 3339 format: "2023-11-05T14:30:00Z")
  #       targetTime: ""
  #       # -- Stop before (true) or at (false) target
  #       exclusive: false
  #       # -- Transaction ID target (requires backupID)
  #       targetXID: ""
  #       # -- Named restore point (requires backupID)
  #       targetName: ""
  #       # -- Log Sequence Number target
  #       targetLSN: ""
  #       # -- Recover to earliest consistent state (requires backupID)
  #       targetImmediate: false
  #       # -- Specific backup ID (format: YYYYMMDDTHHMMSS)
  #       backupID: ""
  #     # -- Database name after recovery
  #     database: ""
  #     # -- Owner after recovery
  #     owner: ""
  #     # -- Secret for credentials after recovery
  #     secret:
  #       name: ""
  #
  #   # -- External clusters for recovery/replication
  #   externalClusters: []
  #     # - name: source-cluster
  #       # -- Barman object store configuration
  #       barmanObjectStore:
  #         destinationPath: "s3://backups/"
  #         endpointURL: "https://s3.amazonaws.com"
  #         s3Credentials:
  #           accessKeyId:
  #             name: backup-creds
  #             key: ACCESS_KEY_ID
  #           secretAccessKey:
  #             name: backup-creds
  #             key: ACCESS_SECRET_KEY
  #         wal:
  #           maxParallel: 8
  #       # OR: Connection parameters for pg_basebackup
  #       # connectionParameters:
  #       #   host: source-db.example.com
  #       #   port: "5432"
  #       #   user: streaming_replica
  #       #   dbname: postgres
  #       # password:
  #       #   name: source-db-replica-user
  #       #   key: password